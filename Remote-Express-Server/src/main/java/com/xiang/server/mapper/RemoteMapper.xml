<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiang.server.mapper.RemoteMapper">
  <resultMap id="BaseResultMap" type="com.xiang.bean.po.Remote">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="del" jdbcType="BIT" property="del" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="client_type" jdbcType="INTEGER" property="clientType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="groupid" jdbcType="BIGINT" property="groupid" />
    <result column="localip" jdbcType="VARCHAR" property="localip" />
    <result column="localport" jdbcType="INTEGER" property="localport" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="conne_break_flag" jdbcType="BIT" property="conneBreakFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, del, ip, port, client_type, remark, account, password, groupid, localip, localport, 
    gmt_modified, gmt_create, conne_break_flag
  </sql>
  <select id="selectByExample" parameterType="com.xiang.bean.po.RemoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from remote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.xiang.bean.po.RemoteExample" resultType="java.lang.Long">
    select count(*) from remote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update remote
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=BIT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.clientType != null">
        client_type = #{record.clientType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.groupid != null">
        groupid = #{record.groupid,jdbcType=BIGINT},
      </if>
      <if test="record.localip != null">
        localip = #{record.localip,jdbcType=VARCHAR},
      </if>
      <if test="record.localport != null">
        localport = #{record.localport,jdbcType=INTEGER},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.conneBreakFlag != null">
        conne_break_flag = #{record.conneBreakFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update remote
    set id = #{record.id,jdbcType=BIGINT},
      del = #{record.del,jdbcType=BIT},
      ip = #{record.ip,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      client_type = #{record.clientType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      groupid = #{record.groupid,jdbcType=BIGINT},
      localip = #{record.localip,jdbcType=VARCHAR},
      localport = #{record.localport,jdbcType=INTEGER},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      conne_break_flag = #{record.conneBreakFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiang.bean.po.Remote">
    update remote
    <set>
      <if test="del != null">
        del = #{del,jdbcType=BIT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="clientType != null">
        client_type = #{clientType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        groupid = #{groupid,jdbcType=BIGINT},
      </if>
      <if test="localip != null">
        localip = #{localip,jdbcType=VARCHAR},
      </if>
      <if test="localport != null">
        localport = #{localport,jdbcType=INTEGER},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="conneBreakFlag != null">
        conne_break_flag = #{conneBreakFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>