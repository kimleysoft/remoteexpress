<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiang.server.mapper.LoginHistoryMapper">
  <resultMap id="BaseResultMap" type="com.xiang.bean.po.LoginHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="del" jdbcType="BIT" property="del" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="loginip" jdbcType="VARCHAR" property="loginip" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="operating_system" jdbcType="VARCHAR" property="operatingSystem" />
    <result column="ref_type" jdbcType="INTEGER" property="refType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, del, userid, nick, user_name, loginip, gmt_modified, gmt_create, operating_system, 
    ref_type
  </sql>
  <select id="selectByExample" parameterType="com.xiang.bean.po.LoginHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.xiang.bean.po.LoginHistoryExample" resultType="java.lang.Long">
    select count(*) from login_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=BIT},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.nick != null">
        nick = #{record.nick,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginip != null">
        loginip = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatingSystem != null">
        operating_system = #{record.operatingSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.refType != null">
        ref_type = #{record.refType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_history
    set id = #{record.id,jdbcType=BIGINT},
      del = #{record.del,jdbcType=BIT},
      userid = #{record.userid,jdbcType=BIGINT},
      nick = #{record.nick,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      loginip = #{record.loginip,jdbcType=VARCHAR},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      operating_system = #{record.operatingSystem,jdbcType=VARCHAR},
      ref_type = #{record.refType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiang.bean.po.LoginHistory">
    update login_history
    <set>
      <if test="del != null">
        del = #{del,jdbcType=BIT},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="nick != null">
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null">
        loginip = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="operatingSystem != null">
        operating_system = #{operatingSystem,jdbcType=VARCHAR},
      </if>
      <if test="refType != null">
        ref_type = #{refType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>